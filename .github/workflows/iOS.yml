name: Advanced Video - iOS 
on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  build_screen_share_objc:
    name: Build Screen-Share Objective-C
    runs-on: macos-latest
    env:
      XC_PROJECT_NAME: ${{ 'NERtcSample-ScreenShare-iOS-Objective-C' }}
      XC_VERSION: ${{ '11.4' }}
      XC_SCHEME: ${{ 'NERtcSample-ScreenShare-iOS-Objective-C' }}
      XC_WORKSPACE: ${{ 'NERtcSample-ScreenShare-iOS-Objective-C.xcworkspace' }}
      XC_CONFIGURATION: ${{ 'release' }}
      XC_ARCHIVE_DIR: ${{ './product/archive' }}
      XC_IPA_DIR: ${{ './product/ipa' }}
      XC_EXPORT_OPTIONS_PATH: ${{ './Workflow/ExportOptions.plist' }}
      XC_KEY_STUB_SCRIPT_PATH: ${{ './Workflow/key_stub.py' }}
      XC_PROJECT_STUB_SCRIPT_PATH: ${{ './Workflow/project_stub.py' }}

      ENCRYPTED_CERT_PATH: ${{ '../../Shared Files/iOS/cert.p12.gpg' }}
      DECRYPTED_CERT_PATH: ${{ './Workflow/cert.p12' }}
      APP_ENCRYPTED_PROVISION_PATH: ${{ './Workflow/screen_share_objc.mobileprovision.gpg' }}
      APP_DECRYPTED_PROVISION_PATH: ${{ './Workflow/screen_share_objc.mobileprovision' }}
      EXT_ENCRYPTED_PROVISION_PATH: ${{ './Workflow/screen_share_broadcast_objc.mobileprovision.gpg' }}
      EXT_DECRYPTED_PROVISION_PATH: ${{ './Workflow/screen_share_broadcast_objc.mobileprovision' }}
      CERT_ENC_PWD: ${{ secrets.CERT_ENC_PWD }}
      PROVISION_ENC_PWD: ${{ secrets.PROVISION_ENC_PWD }}
      APP_KEY: ${{ secrets.APP_KEY }}
      KEYCHAIN: ${{ 'temp.keychain' }}
      APP_KEY_HEADER_PATH: ${{ './NERtcSample-ScreenShare-iOS-Objective-C/AppKey.h' }}
    defaults:
      run:
        shell: bash
        working-directory: ./ScreenShare/ScreenShare-iOS-Objective-C

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python 2.7
      uses: actions/setup-python@v2
      with:
          python-version: '2.7'

    - name: Select Xcode
      run: 
        sudo xcode-select -s /Applications/Xcode_$XC_VERSION.app

    - name: Install Dependencies
      run: pod install

    - name: Configure Keychain
      run: 
        security create-keychain -p "" "$KEYCHAIN";
        security list-keychains -s "$KEYCHAIN";
        security default-keychain -s "$KEYCHAIN";
        security unlock-keychain -p "" "$KEYCHAIN";
        security set-keychain-settings;
        security list-keychains;
    
    - name: Configure Code Signing
      run:
        gpg -d -o "$DECRYPTED_CERT_PATH" --pinentry-mode=loopback --passphrase "$CERT_ENC_PWD" "$ENCRYPTED_CERT_PATH";
        gpg -d -o "$APP_DECRYPTED_PROVISION_PATH" --pinentry-mode=loopback --passphrase "$PROVISION_ENC_PWD" "$APP_ENCRYPTED_PROVISION_PATH";
        gpg -d -o "$EXT_DECRYPTED_PROVISION_PATH" --pinentry-mode=loopback --passphrase "$PROVISION_ENC_PWD" "$EXT_ENCRYPTED_PROVISION_PATH";
        security import "$DECRYPTED_CERT_PATH" -k "$KEYCHAIN" -P "" -A;
        security set-key-partition-list -S apple-tool:,apple:, -s -k "" "$KEYCHAIN";
        mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles";
        UUID=$(/usr/libexec/PlistBuddy -c "Print :UUID" /dev/stdin <<< $(security cms -D -i $APP_DECRYPTED_PROVISION_PATH));
        cp "$APP_DECRYPTED_PROVISION_PATH" "$HOME/Library/MobileDevice/Provisioning Profiles/$UUID.mobileprovision";
        UUID=$(/usr/libexec/PlistBuddy -c "Print :UUID" /dev/stdin <<< $(security cms -D -i $EXT_DECRYPTED_PROVISION_PATH));
        cp "$EXT_DECRYPTED_PROVISION_PATH" "$HOME/Library/MobileDevice/Provisioning Profiles/$UUID.mobileprovision";

    - name: App Key Stub
      run: 
        python $XC_KEY_STUB_SCRIPT_PATH
    
    - name: Project Stub
      run:
        APP_PROVISION=$(/usr/libexec/PlistBuddy -c "Print :UUID" /dev/stdin <<< $(security cms -D -i $APP_DECRYPTED_PROVISION_PATH));
        EXT_PROVISION=$(/usr/libexec/PlistBuddy -c "Print :UUID" /dev/stdin <<< $(security cms -D -i $EXT_DECRYPTED_PROVISION_PATH));
        python $XC_PROJECT_STUB_SCRIPT_PATH $APP_PROVISION $EXT_PROVISION;

    - name: Archive
      run:
        mkdir -p $XC_ARCHIVE_DIR;
        xcodebuild archive -workspace $XC_WORKSPACE -scheme $XC_SCHEME -configuration $XC_CONFIGURATION -archivePath $XC_ARCHIVE_DIR/$XC_PROJECT_NAME.xcarchive;

    - name: Export IPA
      run: 
        mkdir -p $XC_IPA_DIR;
        xcodebuild -exportArchive -archivePath $XC_ARCHIVE_DIR/$XC_PROJECT_NAME.xcarchive -exportPath $XC_IPA_DIR -exportOptionsPlist $XC_EXPORT_OPTIONS_PATH;

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: NERtcSample-ScreenShare-iOS-Objective-C
        path: ./ScreenShare/ScreenShare-iOS-Objective-C/product/ipa/NERtcSample-ScreenShare-iOS-Objective-C.ipa
